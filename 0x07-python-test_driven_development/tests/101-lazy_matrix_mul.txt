The ``101-lazy_matrix_mul`` module
============================

Using ``lazy_matrix_mul``
---------------------

Import lazy_matrix_mul function from the module:
    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

1. Try to multiply normal matrices of size 2x2 * 2x2:

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

2. Try to multiply normal matrices of size 3x2 * 2x2:

    >>> lazy_matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22],
           [23, 34]])

3. Try to multiply normal matrices of size 1x1 * 1x1:
    >>> lazy_matrix_mul([[5]], [[5]])
    array([[25]])

4. Try to multiply normal matrices of float and negative numbers of size 3x2 * 2x2:
    >>> lazy_matrix_mul([[1, -2.4], [3.0, 4], [5.9, -6]], [[1, 2.6], [3.234, 4]])
    array([[ -6.7616,  -7.    ],
           [ 15.936 ,  23.8   ],
           [-13.504 ,  -8.66  ]])

5. Try invalid multiplication for tuples:
    >>> lazy_matrix_mul((2, 43, 8), (6, 1, 7))
    111

6. Try invalid multiplication for lists:
    >>> lazy_matrix_mul([2, 43, 8], [6, 1, 7])
    111

7. Try invalid multiplication for list of lists of non-numaric values:
    >>> lazy_matrix_mul([[1, "2"], ["ab", 4], ["5", 6]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: invalid data type for einsum

8. Try invalid multiplication for not rectangular lists:
    >>> lazy_matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4, 5]])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence.

9. Try invalid multiplication for Empty lists:
    >>> lazy_matrix_mul([[]], [])
    array([0.])

10. Try invalid multiplication for one empty list and the other is normal:
    >>> lazy_matrix_mul([[1, 2], [3, 4], [5, 6]], [[]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (3,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

11. Try invalid multiplication for one empty list inside first argument:
    >>> lazy_matrix_mul([[1, 2], [], [5, 6]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence.

12. Try invalid multiplication for matrices of size 3x2 * 1x3:
    >>> lazy_matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2, 3]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (3,2) and (1,3) not aligned: 2 (dim 1) != 1 (dim 0)

13. Run a test in which no parameters are provided:
    >>> lazy_matrix_mul()
    Traceback (most recent call last):
        ...
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

14. Try to provide more parameters than expected:
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4,]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: lazy_matrix_mul() takes 2 positional arguments but 3 were given

15. Try to provide None as a parameter:
    >>> lazy_matrix_mul(None)
    Traceback (most recent call last):
        ...
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

16. Try to provide None in all parameter:
    >>> lazy_matrix_mul(None, None)
    Traceback (most recent call last):
        ...
    TypeError: Object arrays are not currently supported
