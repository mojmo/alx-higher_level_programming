The ``100-matrix_mul`` module
============================

Using ``matrix_mul``
---------------------

Import matrix_mul function from the module:
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

1. Try to multiply normal matrices of size 2x2 * 2x2:

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

2. Try to multiply normal matrices of size 3x2 * 2x2:

    >>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22], [23, 34]]

3. Try to multiply normal matrices of size 1x1 * 1x1:
    >>> matrix_mul([[5]], [[5]])
    [[25]]

4. Try to multiply normal matrices of float and negative numbers of size 3x2 * 2x2:
    >>> matrix_mul([[1, -2.4], [3.0, 4], [5.9, -6]], [[1, 2.6], [3.234, 4]])
    [[-6.7616, -7.0], [15.936, 23.8], [-13.504, -8.659999999999998]]

5. Try invalid multiplication for tuples:
    >>> matrix_mul((2, 43, 8), (6, 1, 7))
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list

6. Try invalid multiplication for lists:
    >>> matrix_mul([2, 43, 8], [6, 1, 7])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists


7. Try invalid multiplication for list of lists of non-numaric values:
    >>> matrix_mul([[1, "2"], ["ab", 4], ["5", 6]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats

8. Try invalid multiplication for not rectangular lists:
    >>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4, 5]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_b must be of the same size

9. Try invalid multiplication for Empty lists:
    >>> matrix_mul([[]], [])
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty

10. Try invalid multiplication for one empty list and the other is normal:
    >>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[]])
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty

11. Try invalid multiplication for one empty list inside first argument:
    >>> matrix_mul([[1, 2], [], [5, 6]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_a must be of the same size

12. Try invalid multiplication for matrices of size 3x2 * 1x3:
    >>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2, 3]])
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied

13. Run a test in which no parameters are provided:
    >>> matrix_mul()
    Traceback (most recent call last):
        ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

14. Try to provide more parameters than expected:
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4,]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: matrix_mul() takes 2 positional arguments but 3 were given

15. Try to provide None as a parameter:
    >>> matrix_mul(None)
    Traceback (most recent call last):
        ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

16. Try to provide None in all parameter:
    >>> matrix_mul(None, None)
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list
